{"version":3,"sources":["Unauth.js","Modal.js","Qustion.js","action.js","SignIn.js","App.js","serviceWorker.js","ScrappedReducer.js","index.js","chegglogo.jpeg"],"names":["Unauthorized","props","id","className","style","position","left","href","Modal","memo","Backdrop","zIndex","open","show","opacity","transform","onClick","close","children","useStyles","makeStyles","theme","root","width","marginTop","spacing","color","Question","classes","useState","question","setQuestion","error","seterror","rawDoc","setrawdoc","spinner","setspinner","showModal","setshowModal","AuthValid","useRef","useEffect","a","token","localStorage","getItem","axios","get","headers","authorization","resp","answer","data","console","log","current","verifyToken","sendingQuestion","alert","obj","post","render","LinearProgress","variant","top","ReactHtmlParser","src","chegg","alt","Input","placeholder","onChange","e","content","target","value","sendAuthtoReducer","username","password","type","connect","dispatch","sendAuth","setItem","signUpAuth","ip","signupAuth","withRouter","setpassword","setusername","modal","setmodal","setip","errorLogin","setErrorLogin","errorSignup","setErrorSignup","getIP","history","push","sendingAuthtoBackend","SignUP","preventDefault","required","App","exact","path","component","SignIn","Boolean","window","location","hostname","match","initalstate","raw","images","reducer","state","action","rootreducer","combineReducers","Document","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.ea249465.chunk.js","sourcesContent":["import React from 'react';\nimport './Unauth.css'\nconst Unauthorized = (props) => {\n    return (\n        <div id='authFailed' className='center'>\n            <i className='large material-icons'>error_outline</i>\n            <h2>There is a problem with your connection </h2>\n            <h3 style={{position:\"absolute\",left:'180px'}}>Try to <a href='/'>login</a></h3>\n        </div>\n    )\n}\n\nexport default Unauthorized;\n","import React,{memo, Fragment} from 'react';\nimport \"./modal.css\"\nimport {Backdrop} from '@material-ui/core'\n\n\n\nconst Modal=memo((props)=>{\n   return(\n   <Fragment>\n       <Backdrop style={{zIndex:'100'}} open={props.show}/>\n    <div className=\"modal-wrapper \" style={{opacity :props.show ? \"1\":\"0\",\n        transform: props.show ? \"translateY(0vh)\" : 'translateY(-100vh)' }}>\n        <div className=\"modal-header\" >\n        <label>Attention!!!</label>\n\n        <span  className=\"close-modal-btn\" onClick={props.close}>x</span>\n        </div>\n        <div className=\"modal-body\">\n            <div> {props.children}</div>\n        </div>\n        <div className=\"modal-footer\">\n            <button className=\"btn-cancel\" onClick={props.close}  >Continue </button>\n    \n        </div>\n    </div>\n\n\n   </Fragment>\n   )})\n\nexport default Modal","import React,{useState,Fragment, useEffect, useRef} from 'react'\nimport axios from 'axios'\nimport UNAUTHORIZED from './Unauth'\nimport {Input,LinearProgress} from '@material-ui/core'\nimport './Signin.css'\nimport ReactHtmlParser from 'react-html-parser';\nimport chegg from  './chegglogo.jpeg'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from './Modal'\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n      color:'orange'\n    },\n  }));\n  \n\nvar Question=(props)=>{\n    const classes=useStyles()\n    const [question,setQuestion]=useState(null)\n    const [error, seterror]=useState(null)\n    const [rawDoc, setrawdoc]=useState(null)\n    const [spinner, setspinner]=useState(false)\n    const [showModal, setshowModal]=useState(false)\n    const AuthValid=useRef(true)\n\n    useEffect(()=>{\n        const verifyToken=async()=>{\n        let token=localStorage.getItem('token')\n          try{\n            let resp=await axios.get('http://localhost:9000/api/verifyToken',{\n                headers:{\n                    authorization: `Bearer ${token}`\n                }\n                \n            })\n            let answer=resp.data\n            console.log(answer)\n            console.log(48)\n            AuthValid.current=true\n          }catch(e){\n              seterror(e)\n              AuthValid.current=false\n          }\n        }\n        verifyToken()\n\n    },[])\n\n  \n    var gettingQuestion=(e)=>{\n        let content=e.target.value\n        setQuestion(content)\n    }\n    \n    var sendingQuestion=async()=>{\n        try{\n            if(!question){\n                return alert('You have to type a question in the field provided')\n            }\n             setspinner(true)\n            let obj={}\n            obj.question=question\n            const data = await axios.post('http://localhost:9000/api/question/chegg',obj)\n            const resp=await data.data\n            setrawdoc(resp.rawDoc)\n            \n        }catch(e){\n            console.log(e)\n            setshowModal(true)\n\n        }finally{\n            setspinner(false)\n        }\n     \n    }\n\n    var  closeModal=()=>{\n        setshowModal(!showModal)\n    }\n\n    let render=null\n    if(showModal){\n        render=(\n        <Modal show={showModal} close={closeModal}> Your request couldn't be complete, Please try again</Modal>\n        )\n    }else if(spinner){\n        render=(\n            <div className={classes.root}><LinearProgress variant='query' style={{width:'700px', position:'absolute', top:'70%',left:'33%'}}  /></div>\n        )\n    }else if(rawDoc){\n        render=(\n            <Fragment>\n               <div className='hr'/>\n                <h1 className='answer'>Answers</h1>\n                <div className='answerimage'>{ReactHtmlParser(rawDoc)}</div>\n            </Fragment>\n        )\n    }\n    \n\n   \n\n\n    return(\n        <Fragment>\n            {error ?  <UNAUTHORIZED/>:\n            <div>\n                  <h1 className='header'>\n                <img src={chegg} alt='' className='qimage'/>\n            </h1>\n                <Input className='qinput' placeholder=\"Please paste your question here!\" onChange={gettingQuestion}/>\n                <button  className='button3 pulse' onClick={sendingQuestion}>Submit</button>\n                {render}\n            </div>}\n        </Fragment>\n    )\n}\n\n\nexport default Question","import axios from 'axios'\n\n\nexport const sendAuth=(username,password)=>{\n    return  async dispatch=>{\n        try{\n            const resp= await axios.post('/api/signin/login',{username,password})\n            const token= await resp.data\n            // console.log(token)\n            dispatch(sendAuthtoReducer(username,password,token))\n            localStorage.setItem('token',token)\n            localStorage.setItem('username',username)\n        }catch(e){\n            return e\n        }\n       \n\n    }\n    \n}\n\n\nexport const signupAuth=(username,password,ip)=>{\n    return async dispatch=>{\n        try{\n            const resp =  await axios.post('/api/signin/signup',{username,password,ip})\n            const token= await resp.data\n            console.log(token)\n            dispatch(sendAuthtoReducer(username,password,token))\n            localStorage.setItem('token',token)\n            localStorage.setItem('username',username)\n        }catch(e){\n            console.log(e)\n            return e\n        }\n       \n    }\n}\n\n\nexport const sendAuthtoReducer=(username,password,token)=>{\n    return{\n        type:'Document',\n        username:username,\n        password:password,\n        token:token\n    }\n}","import React, { useState, Fragment,useEffect, useRef } from 'react'\nimport {Input} from '@material-ui/core'\nimport './Signin.css'\nimport {withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {sendAuth,signupAuth} from './action'\nimport chegg from  './chegglogo.jpeg'\nimport Modal from './Modal'\nimport axios from 'axios'\n\n\n\n\n\nconst SignIn=(props)=>{\n    const [password , setpassword]=useState(null)\n    const [username, setusername]=useState(null)\n    const [modal , setmodal]=useState(true)\n    const [ip,setip]=useState(null)\n    const [errorLogin, setErrorLogin]=useState(null)\n    const [errorSignup,setErrorSignup]=useState(null)\n    const AuthValid=useRef(false)\n\n\n    useEffect(()=>{\n        //  getting the ip from ipify\n        var getIP=async()=>{\n          const resp= await axios.get('https://geolocation-db.com/json/6db070f0-7c27-11ea-8264-e974339fc182.json')\n          setip(await resp.data)\n          await verifyToken()\n        }\n        const verifyToken=async()=>{\n            let token=localStorage.getItem('token')\n              try{\n                await axios.get('/api/verifyToken',{\n                    headers:{\n                        authorization: `Bearer ${token}`\n                    }\n                    \n                })\n                 AuthValid.current=true\n                 console.log(42)\n                 props.history.push('/question')\n              }catch(e){\n                console.log(e)  \n                AuthValid.current=false\n              }\n            }\n        getIP()\n        // verifyToken()\n\n\n    //eslint-disable-next-line\n      },[])\n// if(AuthValid){\n//     props.history.push('/question')\n// }\n    var getusername=(e)=>{\n        e.preventDefault()\n        let content=e.target.value\n        setusername(content)\n        setErrorSignup(null)\n        setErrorLogin(null)\n    }\n    var getpassword=(e)=>{\n        e.preventDefault()\n        let content=e.target.value\n        setpassword(content)\n        setErrorSignup(null)\n        setErrorLogin(null)\n    }\n\n    var sendingAuthtoBackend=async()=>{\n        setErrorSignup(null)\n        setErrorLogin(null)\n        const resp=await props.sendAuth(username,password)\n        if(resp)setErrorLogin(resp)\n        else{\n            props.history.push('/question')\n        }\n    }\n    var  closeModal=()=>{\n        setmodal(!modal)\n    }\n\n    var SignUP=async()=>{\n        setErrorSignup(null)\n        setErrorLogin(null)\n      const resp= await props.signUpAuth(username,password,ip)\n      if (resp) setErrorSignup(resp)\n      else{\n          props.history.push('/question')\n      }\n    }\n\n    return(\n        <Fragment >\n            {errorLogin ? <p className='error'>Username is not valid or password is wrong</p>:null}\n            {errorSignup ? <p className='error'> This username is taken</p>:null}\n            {modal ? <Modal close={closeModal} show={modal}> If you don't have an account just type your username and  password you will be logged in automatically </Modal>:null}\n            <h1 className='header'>\n                <img src={chegg} alt='' className='image' />\n            </h1>\n            <form>\n            <div >\n                <Input type='text' onChange={getusername} className='input' placeholder=\"Username\" required={true}/>\n            </div>\n            <div>\n                <Input type='password' onChange={getpassword} className=\"input\" placeholder=\"Password\" required={true}/>\n            </div>\n            <button style={{color:'white'}} onClick={sendingAuthtoBackend} type='button'   className='button1 pulse'>\n                <span >\n                Sign-in\n                </span>\n            </button>\n            <button onClick={SignUP} type='button'  className='button2 pulse'>\n                <span>\n                    sign-up\n                </span>\n            </button>\n            </form>\n       \n        </Fragment>\n    )\n}\n\n\nconst maptoprops=dispatch=>{\n    return{\n        sendAuth:(username,password)=>dispatch(sendAuth(username,password)),\n        signUpAuth:(username,password,ip)=>dispatch(signupAuth(username,password,ip))\n    }\n}\n\n\n\nexport default connect(null,maptoprops)(withRouter(SignIn));","import React from 'react';\nimport Question from './Qustion'\nimport {BrowserRouter,Route, Switch } from 'react-router-dom'\nimport SignIn from './SignIn';\nfunction App() {\n\n  return (\n    <BrowserRouter>\n    <Switch>\n    <Route exact path='/' component={SignIn}/>\n    <Route exact path='/question' component={Question}/>\n    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initalstate={\n    raw:null,\n    images:null,\n    token:null\n}\n\n\nconst reducer=(state=initalstate,action)=>{\n    if(action.type==='Document'){\n        return{\n            ...state,\n            raw:action.raw,\n            images:action.images,\n            token:action.token\n        }\n    }\n    return state\n}\n\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport thunk  from 'redux-thunk'\nimport {Provider} from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\"\nimport Document  from './ScrappedReducer'\n\nconst rootreducer=combineReducers({\n  Document:Document\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootreducer, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/chegglogo.2575b66d.jpeg\";"],"sourceRoot":""}